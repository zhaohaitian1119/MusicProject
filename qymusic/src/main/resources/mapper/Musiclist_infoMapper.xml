<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.group.music.qymusic.mapper.Musiclist_infoMapper">
    <resultMap id="BaseResultMap" type="com.group.music.qymusic.pojo.Musiclist_info">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="musiclist_id" property="musiclistId" jdbcType="INTEGER"/>
        <result column="music_id" property="musicId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultMap1" type="com.group.music.qymusic.pojo.Musiclist_info">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="musiclist_id" property="musiclistId" jdbcType="INTEGER"/>
        <result column="music_id" property="musicId" jdbcType="INTEGER"/>
        <collection property="musics" ofType="Music" resultMap="BaseResultMap2"/>
    </resultMap>
    <resultMap id="BaseResultMap2" type="com.group.music.qymusic.pojo.Music">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="singer_id" property="singerId" jdbcType="INTEGER"/>
        <result column="slbum_ud" property="slbumUd" jdbcType="INTEGER"/>
        <result column="clickvolume" property="clickvolume" jdbcType="INTEGER"/>
        <result column="lyric" property="lyric" jdbcType="VARCHAR"/>
        <result column="duration" property="duration" jdbcType="VARCHAR"/>
        <result column="musicpic" property="musicpic" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, musiclist_id, music_id
  </sql>
    <sql id="Base_Column_List2">
        musiclist_info.id, musiclist_id, music_id,name,address,singerId,musicpic
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.group.music.qymusic.pojo.Musiclist_infoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from musiclist_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from musiclist_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from musiclist_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.group.music.qymusic.pojo.Musiclist_infoExample">
        delete from musiclist_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.group.music.qymusic.pojo.Musiclist_info">
    insert into musiclist_info (id, musiclist_id, music_id
      )
    values (#{id,jdbcType=INTEGER}, #{musiclistId,jdbcType=INTEGER}, #{musicId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.group.music.qymusic.pojo.Musiclist_info">
        insert into musiclist_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="musiclistId != null">
                musiclist_id,
            </if>
            <if test="musicId != null">
                music_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="musiclistId != null">
                #{musiclistId,jdbcType=INTEGER},
            </if>
            <if test="musicId != null">
                #{musicId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.group.music.qymusic.pojo.Musiclist_infoExample"
            resultType="java.lang.Integer">
        select count(*) from musiclist_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update musiclist_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.musiclistId != null">
                musiclist_id = #{record.musiclistId,jdbcType=INTEGER},
            </if>
            <if test="record.musicId != null">
                music_id = #{record.musicId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update musiclist_info
        set id = #{record.id,jdbcType=INTEGER},
        musiclist_id = #{record.musiclistId,jdbcType=INTEGER},
        music_id = #{record.musicId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.group.music.qymusic.pojo.Musiclist_info">
        update musiclist_info
        <set>
            <if test="musiclistId != null">
                musiclist_id = #{musiclistId,jdbcType=INTEGER},
            </if>
            <if test="musicId != null">
                music_id = #{musicId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.group.music.qymusic.pojo.Musiclist_info">
    update musiclist_info
    set musiclist_id = #{musiclistId,jdbcType=INTEGER},
      music_id = #{musicId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByMusicListid" resultMap="BaseResultMap1"
            parameterType="com.group.music.qymusic.pojo.Musiclist_infoExample">
        select
       *
        from musiclist_info,music
        where musiclist_info.music_id=music.id and musiclist_id = #{musicListId,jdbcType=INTEGER}
    </select>
</mapper>